-오픈소스의 정의-

오픈소스란 소프트웨어 혹은 하드웨어의 제작자의 권리를 지키면서 원시 코드를 누구나 열람할 수 있도록 한 소프트웨어 혹은 오픈소스 라이선스에 준하는 모든 통칭을 일컫는다. 하지만 “무료 소프트웨어” 가 아닌 “자유 소프트웨어” 임. 무료 로서의 의미보다는 “기술의 공개”가 더 가치있음.


-오픈소스의 역사-

1960년대 말 이전까지도 소프트웨어는 하드웨어와 함께 제공되는 것으로 여겼고, 오히려 코드를 무료로 배포하는 경향도 있었다. 소스가 오픈되어야만 컴퓨터 기능이 향상되고, 그래야 더 많은 판매가 이루어질 수 있었기 떄문이었다.
벨 연구소의 캔톰슨과 데니스리치가 만든 유닉스도 이런 자유스러운 분위기에서 만들어졌다. 
유닉스는 특정한 하드웨어에 종속되지 않는 하나의 운영체제계로 저렴한 컴퓨터에 맞게 만들어졌다.
이후 많은 사람들이 유닉스를 많이 고치고 수정해서 기능을 향상시켜 사용해 나가기 시작했다. 
그 결과 버클리에서는 유닉스를 수정해서 BSD를 배포하기도 했다. 

하지만 1970년대 들어서면서 분위기가 바뀌기 시작했다. 소프트웨어 기술 발전과 더불어 개발 비용이 들어가면서 소프트웨어 상품 시장과 IBM의 ‘하드웨어에서 소프트웨어를 분리하는 언번들링(unbundling) 정책’이 등장했기 때문이다. 
그 때문에 70년대 말 이후 개인용 컴퓨터 발전과 보급이 소프트웨어 상품 시장이 폭발적으로 성장하면서 소프트웨어는 더 이상 자유롭지 못하게 되었다. 특히 1980년 초중반에 생긴 두 가지 사건은 소프트웨어에 대한 장막을 치는 결정적 계기가 되었다. 
그중 하나는 일본에서 처음 시작된 ‘소프트웨어에 대한 저작권 적용’이다. 이후 IBM 등이 이 저작권법을 이용해 소프트웨어에 대한 자유로운 이용을 금지시켰다. 벨연구소는 반독점법을 적용받던 통신사 AT&T 산하에 있어서 1982년 그 법이 해제되기 전까지는 자유로울 수 있었지만 법이 해제되자 컴퓨터 사업에 진출하면서 유닉스의 소유권을 주장하면서 많은 소송을 제기하게 돼었다. 이는 자유소프트웨어 운동 혹은 카피레프트운동으로 이어졌다. 

당시 컴퓨터 해커였던 리차드 스톨만은 1970년대 MIT의 인공지능 연구소에 근무하던 유능한 프로그래머였다.
그는 연구소에서 일하던 동료 프로그래머들이 하나씩 돈을 벌기 위해 떠나고, 그들이 소프트웨어 저작권과 돈 때문에 분쟁에 시달리는 것을 보고 현재의 상업적 소프트웨어 경제 시스템의 문제점을 통감했다.
스톨만은 당시 소프트웨어가 컴퓨터 하드웨어로부터 떨어져 나오면서 상업적인 제품으로 팔리기 시작한 것은 지극히 잘못된 일이라고 생각해 모든 소프트웨어는 무제한 공유되고 무료로 배포돼야 한다는 주장과 함께, MIT를 떠나 상업용 소프트웨어와의 전쟁을 선포했다. 그렇게 최초의 "자유 소프트웨어(free software)" 개발 프로젝트인 GNU(Gnu's Not Unix)를 시작했다. GNU는 기본적으로 모든 소프트웨어를, 아무 대가나 저작권에 의한 제한 없이, 무료로 만들고 무료로 배급한다는 데서 취지에서 출발했다. 스톨만은 (Free Software Foundation)을 설립하고 본격적인 자유 소프트웨어 운동을 시작했다. 
스톨만과 그 프로그래머들은 GNU 프로젝트 하에서 유닉스와 호환되는 시스템 소프트웨어를 만들기 시작했고, 개발된 GNU 소프트웨어는 모두 무료로 개방됐다. 때문에 프로그래머라면 누구나 GNU의 소프트웨어를 가져다 수정하고 덧붙이고 개량해 다시 사람들에게 개방할 수 있었다. 그누 소프트웨어는 일반 공중 라이선스(GPL)라는 협약에 의해 배포되는데, 
이 협약에 따라 그누 소프트웨어의 복사본을 가지고 있는 사람은 누구든지 그것을 다른 사람에게 같은 조건으로 재배포하는 것을 제한하지 못하며, 상업적 이용 금지 조항도 없고 개작을 하더라도 동일한 이용 허락이 이루어져야 하고, 만약 GPL을 어기면 위법이 되도록 만들었다. 이런 분위기가 확산되면서 자유소프트웨어 운동은 리눅스의 탄생과 월드와이드웹(www) 등의 성공으로 이어졌다. 이렇게 프로그래머들이 경제적, 사회적 굴레에서 벗어나 자유롭게 개발을 할 수 있는 소프트웨어라고 해서 "자유 소프트웨어(free software)"라는 명칭과, 그리고 1990년대부터는, 프로그래밍 소스 코드(source code)를 모두에게 개방한다고 해서 "오픈 소스(open source)"라는 용어가 생겨났다.


1998년 자유소프트웨어에 대한 Open Source initiative 이라는 새로운 조짐이 보이기 시작했다.
자유 소프트웨어의 정치적 이데올로기를 걷어내고 열린 소프트웨어 개발에 대한 기업들의 투자를 이끌어내기 위해서였다. 
GPL의 너무나 가혹한 라이센스는 개발자와 그것을 이용하려는 기업들이 오픈 소스 소프트웨어가 상업용 소프트웨어보다 더 우수함에도 불구하고 이를 이용하기 꺼리게 만들게 한다는 생각이 확산되면서였다. ‘오픈 소스 이니시에티브’는 GPL과 비슷하지만 개작에 대한 동일 이용허락을 강제하지 않는다는 점이 결정적으로 다르며 이는 코드의 전유를 허용한 것이였다. 이런 새로운 분위기 속에서 넷스케이프사는 소스 코드를 공개 발표했고, IBM은 아파치 웹서버와 그누/리눅스 투자를 하기도 했다.
이후 썬, 오라클, 컴팩, 델, 휴렛패컫, 인텔 등도 오픈소스 소프트웨어 지원을 위해 투자가 이루어졌다.

-오픈소스의 조건-

1. 자유로운 재배포
 소프트웨어를 판매하거나 무상배포하는것을 제한해서는 안되며 사용료등을 요구해서는 안됨.

2. 원시코드 
오픈소스 프로그램에는 원시코드가 포함되어야하며 컴파일된 형태도 배포해야함.

3. 파생저작물 
오픈소스를 이용해 만든 2차적 프로그램의 창작이 허용되어야 하며, 그 창작물도 배포되는것이 허용되어야한다.

4. 저작자의 원시 코드 원형 유지 
소프트웨어가 발전이 중요하긴 하지만 원작자를 알릴 필요가 있음.

5. 개인 및 단체에 대한 차별금지 
오픈소스의 사용의 허가는 특정 개인이나 단체를 차별해서는 안된다.

6. 사용 분야에 대한 차별금지 
특정한 분야에 대한 사용만 금지하는것은 안된다.

7. 사용 허가의 배포 
프로그램에 대한 권리는 배포에 따른 각 배포자에 의한 별도의 허가 없이도 모든 사용자에게 동일하게 적용된다.

8. 특정 제품에만 유효한 사용 허가의 금지 
특정한 소프트웨어의 배포판에 대해서만 유효해서는 안된다.

9. 다른 소프트웨어를 제한하는 사용 허가의 금지 
예를들어, 한 매체를 통해 여러개의 소프트웨어가 배포될때, 그중 한 소프트웨어가 오픈소스 소프트웨어라고 할때 다른 소프트
웨어가 무료로 제공될 필요는 없다.






출처

http://www.ddaily.co.kr/news/article.html?no=115248

http://www.sciencetimes.co.kr/?news=%EC%9E%90%EC%9C%A0%C2%B7%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4-%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4-%ED%95%B4%ED%82%B9-%EC%97%AD%EC%82%AC

https://wiki.kldp.org/HOWTO/html/Secure-Programs-HOWTO/history.html

http://itnp.kr/roller/home/entry/%EC%98%A4%ED%94%88%EC%86%8C%EC%8A%A4_open_source_%EA%B0%9C%EC%9A%94

http://korea.gnu.org/documents/copyleft/osd-korean.html

